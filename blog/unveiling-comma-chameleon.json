{"id":"https://contentapi.theodi.org/unveiling-comma-chameleon.json","web_url":"http://theodi.org/blog/unveiling-comma-chameleon","slug":"unveiling-comma-chameleon","title":"Unveiling Comma Chameleon","format":"article","updated_at":"2015-09-22T12:40:19+00:00","created_at":"2015-08-20T10:59:30+00:00","tag_ids":["blog","open-data","software","internship"],"tags":[{"id":"https://contentapi.theodi.org/tags/articles/blog.json","web_url":null,"title":"Blog Post","details":{"description":"Blog Post","type":"article"},"content_with_tag":{"id":"https://contentapi.theodi.org/with_tag.json?article=blog","web_url":"http://theodi.org/tags/blog","slug":"blog"}},{"id":"https://contentapi.theodi.org/tags/keywords/open-data.json","web_url":null,"title":"open data","details":{"type":"keyword"},"content_with_tag":{"id":"https://contentapi.theodi.org/with_tag.json?keyword=open-data","web_url":"http://theodi.org/tags/open-data","slug":"open-data"}},{"id":"https://contentapi.theodi.org/tags/keywords/software.json","web_url":null,"title":"software","details":{"type":"keyword"},"content_with_tag":{"id":"https://contentapi.theodi.org/with_tag.json?keyword=software","web_url":"http://theodi.org/tags/software","slug":"software"}},{"id":"https://contentapi.theodi.org/tags/keywords/internship.json","web_url":null,"title":"internship","details":{"type":"keyword"},"content_with_tag":{"id":"https://contentapi.theodi.org/with_tag.json?keyword=internship","web_url":"http://theodi.org/tags/internship","slug":"internship"}}],"details":{"business_proposition":false,"description":"<p>Unveiling Comma Chameleon</p>","excerpt":"<img src=\"http://bd7a65e2cb448908f934-86a50c88e47af9e1fb58ce0672b5a500.r32.cf3.rackcdn.com/uploads/assets/d6/f7/55d6f762d0d4623e2400004c/comma-chameleon.png\" alt=\"null\" class=\"img pull-right\" id=\"55d6f762f362be19bc000097\">\r","language":"en","need_extended_font":false,"alternative_title":" Unveiling Comma Chameleon","url":"","content":"<p><img src=\"http://bd7a65e2cb448908f934-86a50c88e47af9e1fb58ce0672b5a500.r32.cf3.rackcdn.com/uploads/assets/d6/f7/55d6f762d0d4623e2400004c/comma-chameleon.png\" alt=\"null\" class=\"img pull-right\" id=\"55d6f762f362be19bc000097\"></p>\n<p>For the most recent Innovation Week the ODI Labs team and their current cohort of interns decided to prototype a CSV editing spreadsheet app. </p>\n<p>The app – which, after some internal discussion, we decided to call Comma Chameleon – grew out of some blue-sky thinking for possible Innovation Week projects that the Labs team conducted at a recent ODI team offsite. </p>\n<p>As this was the last Innovation Week where all three of the fresh-faced Labs interns would be present, we wanted to work on something from start to finish, to appreciate just how the Labs team prototypes a concept to something tangible.</p>\n<p>Part of our intern mentorship included a crash course in how to define the deliverables of our project. This tuition helped us to break down the idea into a collection of discreet tasks. We added these to our project management board (we used <a href=\"https://waffle.io/\">waffle.io</a>, for the curious among you). ODI web developer Stuart Harrison had worked on prior iterations of <a href=\"http://csvlint.io\">CSVlint</a>, and he provided a concrete <a href=\"http://incentive.opendata.esd.org.uk/\">use case</a> that had arisen during the early days of CSV validation. </p>\n<p>With this guiding example in mind we decided our end-user was <strong>someone who works with data, needs to publish it in an approved format and would like an app that makes editing and publishing a <a href=\"https://www.ietf.org/rfc/rfc4180.txt\">RFC compliant CSV file</a> as painless as possible</strong>.  </p>\n<p>Many of the rationales that had driven the development of CSVlint.io continued to exert influence on Comma Chameleon's prerogatives. Spreadsheet editing is a ubiquitous task in local government and scientific sectors, and the CSV file format is under <a href=\"http://www.w3.org/2013/csvw/wiki/Main_Page\">standardisation</a> by the World Wide Web Consortium (W3C). As a minimum viable product (MVP) we wanted to ship a standalone editor that opens and saves CSV files, and can validate a file against the <a href=\"http://csvlint.io/documentation\">CSVLint API</a>. </p>\n<p>You can check out the fruits of our labour <a href=\"https://github.com/theodi/comma-chameleon\">here</a> and <a href=\"https://github.com/theodi/comma-chameleon/issues\">let us know how well you think we got on</a>. The ultimate ambition with Comma Chameleon is to provide software that anyone would feel comfortable composing CSV data files in. </p>\n<p>I know what you’re thinking: it’s a tall order to prise someone away from their favoured spreadsheet editing software. That’s where <a href=\"http://electron.atom.io/\">Electron</a> shines: it’s an incredibly fast way to get a desktop application up and running and it lets you start focusing on the user experience immediately. </p>\n<p>Electron is a solution for creating cross-platform desktop applications using web technologies (Javascript, HTML and CSS). It’s the engine underneath Github's popular (and open source) text editor <a href=\"https://atom.io/\">Atom</a>, as well as driving some powerful (albeit closed source) software such as Slack and Microsoft’s forthcoming (free!) <a href=\"http://thenextweb.com/apps/2015/04/30/microsofts-cross-platform-visual-studio-code-app-is-based-on-githubs-atom-editor/\">Visual Studio IDE for Mac and Linux</a>. You can consider it a web technologies riff on Java’s ‘write once, run anywhere’ ethos. </p>\n<p>Electron.js is new, but there is <strong>a lot</strong> of enthusiasm around it. There are some solid quick-start guides that demonstrate the power of what you can build (take for instance this tutorial that shows you have to build a drum machine in Electron) and a growing community who maintain curated lists of <a href=\"https://github.com/sindresorhus/awesome-electron/\">how-tos</a>, useful libraries and <a href=\"http://maxogden.com/electron-fundamentals.html\">exemplary projects</a>. </p>\n<p>Armed with Electron we set out to build a desktop intermediary between our data publisher user base and the existing CSVlint validation API. The heavy lifting of CSV parsing and RFC compliant feedback is all handled by the API and, as such, most of our challenge was thinking about how that useful information could be visually presented in a sensible and helpful way for the user. </p>\n<p>Diving into a Javascript program meant that we were all contending with the unfamiliar: a strange syntax; a new landscape of libraries to lean on; and a different event-driven paradigm appropriate to designing a GUI. Thankfully, pair programming helped us to avoid a blind descent into callback hell. Along the way we learned that there is already an impressive infrastructure of Javascript libraries that handles the parsing and processing of CSV data. </p>\n<p>Our efforts were aided by the impressive <a href=\"http://handsontable.com/\">Hands On Table javascript library</a>. This tool makes editing spreadsheets with Javascript a total breeze; the addition of the <a href=\"https://code.google.com/p/jquery-csv/\">jQuery CSV parse library</a> was all we needed to have a simple CSV editor up and running in Electron. </p>\n<p>Not all aspects of CSVlint.io have been incorporated into the prototype. The website provides a way to include a schema (a list of descriptive metadata that enhances the utility of your data). Comma Chameleon doesn’t (yet) support schema validation, but it does include a tidy wizard that helps you auto-generate a schema, tailored to your data file. </p>\n<p>As well as schema generation, the <a href=\"http://data.okfn.org/doc/data-package\">data package</a> wizard also generates a zip file that includes a descriptive metadata file. </p>\n<p><img src=\"http://bd7a65e2cb448908f934-86a50c88e47af9e1fb58ce0672b5a500.r32.cf3.rackcdn.com/uploads/assets/d5/d3/55d5d33b1f986a083b000023/data-pacakage-wizard.png\" alt=\"wizard\" /></p>\n<p>This enables you to publish your data with all the metadata bells and whistles required for an open data release. It’s possible to see a future Comma Chameleon release incorporating Lab's <a href=\"http://git-data-publisher.herokuapp.com/\">Git Data Publisher</a>.</p>\n<p>Working on a desktop interface to CSVlint’s functionality has raised interesting questions about the status of CSVlint itself. For instance, we currently provide some interactivity on CSVlint.io for users who submit CSVs in non-standard formats (e.g. semi-colon ';' separated data) where they are provided with a quick-fix solution via the dialect checker. </p>\n<p><img src=\"http://bd7a65e2cb448908f934-86a50c88e47af9e1fb58ce0672b5a500.r32.cf3.rackcdn.com/uploads/assets/d5/cf/55d5cfd3f362be1b10000042/dialect_checker.png\" alt=\"dialect-check\" /></p>\n<p>When hosting that functionality on a desktop app we can catch errors as soon as the file is opened. For example, we have a ragged rows auto-correct feature, which auto-corrects missing columns in data: </p>\n<p><img src=\"http://bd7a65e2cb448908f934-86a50c88e47af9e1fb58ce0672b5a500.r32.cf3.rackcdn.com/uploads/assets/d5/d3/55d5d3ee1f986a083b000029/ragged-rows.png\" alt=\"ragged-rows\" /> </p>\n<p>Comma Chameleon was a collaborative learning exercise for the Labs interns, so we collectively divulge what we’ve learned here. Electron is great/fantastic for getting things up and running but is still pretty nascent (for instance, a comparable cross platform JS solution nw.js has a more <a href=\"https://github.com/nwjs/nw.js/wiki\">user friendly wiki in place</a> when it comes to documentation. Fortunately there is a lot of community discussion on the <a href=\"https://discuss.atom.io/c/electron\">Discuss board</a> and a lot can be deduced with some detective work. </p>\n<p>We made a collective decision to focus on feature completion rather than robust application design. There is no documentation on how to test applications built with Electron, and we struggled to work out how to do it in the time available. The experience of delivering a minimal viable product within the bounds of Innovation Week imparted/underscored that Test Driven Development, though a best practice, is not really universally “enforceable” – it can be contingent on the tools and time available. </p>\n<p>Ensuring all contributing devs had the same vision would have helped the development process, to make sure everyone’s image of the end product stayed in sync. We’re all slowly learning the Agile process as we spend time at the ODI, and it seems like features of that approach (stand up, constant conferring on the sprint board, pairing on issues/tickets before kicking them off) would have been beneficial.</p>\n<p>Clarifying the vision for Comma Chameleon is essential for all of us as we look to the future of what the application can be. An important question is asked of the app in retrospect: CSVlint returns warnings, hints and info messages that pertain to ‘data cleaning’ (the sort of operations also handled by tools like Open Refine), but the spreadsheet representation of a CSV file occludes such formatting errors (like the delimiters mentioned earlier). This suggests itself as an interesting user experience challenge. </p>\n<p>At the ODI Open Data in the Day training we learned that when it comes to attaining the 5 star rating (a metric for publishing data) it is preferable to publish both a CSV and an .XLS(X) file. The reason being that the CSV is machine readable and thus favourable to the reuse of published data, but the .XLSX (or similar) provides valuable information about how human users are employing the data contained within the spreadsheet. Macros, formulas and infographics impart context that is just as relevant to understanding how a given dataset is employed and consumed. </p>\n<p>This experience has provided us with valuable working insight with which to return to some of the original CSVlint specifications with a different vantage point. At the same time it’s made us all attentive to what we as programmers take for granted when confronting file formats, and what we might need to know of the mindset (and needs) of the average data publisher. </p>\n<p>We’d all like to see Comma Chameleon become a functional addition to the suite of existing Labs projects. The most pressing change we all want to implement is to find a way to reduce calls to the API. Tools such as <a href=\"http://phusion.github.io/traveling-ruby/\">‘Travelling Ruby’</a> may help us address that by including the CSVlint Ruby gem within Comma Chameleon.</p>\n<p>Besides that, we all concur on the necessity of encouraging the ODI to formerly adopt the Comma Chameleon as a mascot!</p>\n<p><em><strong>Stephen Fortune is an <a href=\"https://theodi.org/team/stephen-fortune\">R&D intern</a> at the ODI. Follow <a href=\"https://twitter.com/stephenfortune\">@stephenfortune</a> on Twitter.</strong></em></p>\n<p><em><strong>If you have ideas or experience in open data that you'd like to share, <a href=\"mailto:production@theodi.org\" title=\"pitch us a blog\">pitch us a blog</a> or tweet us at <a href=\"https://twitter.com/odihq\" title=\"@ODIHQ\">@ODIHQ</a>.</strong></em></p>","media_enquiries_name":"","media_enquiries_email":"","media_enquiries_telephone":"","organizations":[],"author":{}},"related_external_links":[],"related":[{"id":"https://contentapi.theodi.org/open-data-tools-that-make-publishing-easy.json","web_url":"http://theodi.org/blog/open-data-tools-that-make-publishing-easy","slug":"open-data-tools-that-make-publishing-easy","title":"Open data tools that make publishing easy (even for non-techies like me)","format":"article","updated_at":"2016-08-26T08:16:26+00:00","created_at":"2015-08-05T11:38:47+00:00","tag_ids":["blog","open-data-leaders-network","training","publishing"]},{"id":"https://contentapi.theodi.org/the-adventures-of-the-rd-intern.json","web_url":"http://theodi.org/blog/the-adventures-of-the-rd-intern","slug":"the-adventures-of-the-rd-intern","title":"The adventures of an R&D intern at the ODI","format":"article","updated_at":"2015-09-11T10:03:09+00:00","created_at":"2015-07-15T12:44:18+00:00","tag_ids":["blog","open-data","internship"]}],"organizations":[],"author":{}}