{"id":"https://contentapi.theodi.org/2014-the-year-of-csv.json","web_url":"http://theodi.org/blog/2014-the-year-of-csv","slug":"2014-the-year-of-csv","title":"2014: The Year of CSV","format":"article","updated_at":"2015-09-11T09:53:54+00:00","created_at":"2014-01-11T15:19:39+00:00","tag_ids":["blog"],"tags":[{"id":"https://contentapi.theodi.org/tags/articles/blog.json","web_url":null,"title":"Blog Post","details":{"description":"Blog Post","type":"article"},"content_with_tag":{"id":"https://contentapi.theodi.org/with_tag.json?article=blog","web_url":"http://theodi.org/tags/blog","slug":"blog"}}],"details":{"business_proposition":false,"description":"","excerpt":"2014 is the year of CSV.\r","language":"en","need_extended_font":false,"alternative_title":"","url":"","content":"<p>2014 is the year of CSV.</p>\n<p>Or, more accurately, my goal for 2014 is to make it easier for developers to use tabular data. Depending on your point of view, highlighting CSV as a format may seem a bit crazy. After all, it's a basic data format that's widely used and deployed so it's hard to imagine that any work needs to be done with it. But it is also the cause of a lot of pain because of inconsistencies in how it is created: CSVs generated from standard spreadsheets and databases as a matter of course use variable encodings, variable quoting of special characters, and variable line endings.</p>\n<p>The vast majority of published open data is tabular; over 90% of the data published on <a href=\"http://data.gov.uk/\">data.gov.uk</a> is tabular data. When data is in a consistent tabular form, you can do all sorts of things with it. Web applications such as <a href=\"http://ckan.org/\">CKAN</a>, <a href=\"http://www.socrata.com/\">Socrata</a>, <a href=\"http://www.google.com/drive/apps.html#fusiontables\">Google Fusion Tables</a>, <a href=\"http://www.junar.com/\">Junar</a>, <a href=\"http://enigma.io/\">enigma</a> and many others provide mechanisms to view the tabular data that they store in flexible ways: as tables, as graphs, as heatmaps. But they rely on the fact that they are storing the data themselves: they know it is in a consistent format, they know the types of values in different columns, they know what the codes within the data means.</p>\n<p>For tabular data to be part of the web, we need to separate where data is stored from how it can be viewed and processed. We should be able to open a file of tabular data in our browsers, and see it displayed as a table. We should be able to use a <code>&lt;heatmap src=\"population.csv\"&gt;</code> element in our web pages and view it as an interactive map. We should be able to search for data on the web using a search engine that looks inside the data itself to work out what it's about.</p>\n<p>More, I believe that tabular data needs to live not just <strong>on</strong> the web but <strong>in</strong> the web. We should be able to link from documents to cells within tabular data, from a cell in one table to a cell in another, and from tabular data to all the other rich information that exists on the web.</p>\n<p>At the moment, tabular data on the web is published in one of two ways:</p>\n<p>First, tabular data is published as <strong>Excel spreadsheets</strong> (or spreadsheets using another tool, but it's most usually Excel). These provide a huge amount of flexibility for providing metadata about the dataset such as where it comes from, further details about what columns actually mean, and notes about the values in particular cells. Take a look at this <a href=\"http://www.ons.gov.uk/ons/rel/rsi/retail-sales/december-2013/rft-retail-sales-index-categories-and-their-percentage-weights-in-2012.xls\">spreadsheet from the Office of National Statistics</a> in the UK, and you'll see these features being used to the fullest extent. For statisticians — indeed anyone who cares about the responsible publication of data — the ability to provide this context, aiming to add explanation and avoid misinterpretation, is very important.</p>\n<p>For developers, using Excel for data is problematic because the data is encoded within it in an unreliable and unpredictable way. It's not desperately difficult, with a bit of work, to put something together that pulls data out of a single Excel file. But if that tool has to also work with similar Excel files, perhaps published in a series, each of which will have their formatting quirks, it becomes terribly time-consuming. Creating generic tools that can extract data from any Excel file is completely impractical.</p>\n<p>Second, tabular data is published as <strong>CSV files</strong> (or possibly tab-separated or colon-separated files). These are usually relatively easy for developers to process, at least so long as a consistent encoding is used and correct quoting of values and escaping of characters has been carried out. But CSV files are desperately poor at providing contextual information that can aid in automated processing of the data that they hold, or even in informing developers about how they should be interpreted. Publishers who want to provide that context either package CSVs up with human-readable documentation (in zips arranged in non-standard ways), or assume that the CSV has been retrieved via a particular explanatory web page.</p>\n<p>CSV is insufficient for tabular data on the web, with independent generic viewers, because it lacks this context. Not knowing which columns contain numeric data makes it impossible to sort correctly. Not knowing which values are links makes it impossible to connect the data into the web. Crucially, from an open data perspective, this lack of expressivity means there is no obvious way to express the licence under which CSV data can be reused.</p>\n<p>There is a sweet spot between developer-friendly, unexpressive CSV and developer-hostile, expressive Excel.</p>\n<p>Formats such as the <a href=\"http://dataprotocols.org/simple-data-format/\">Simple Data Format (SDF) developed by OKF</a> and the <a href=\"https://developers.google.com/public-data/\">DataSet Publishing Language (DSPL) developed by Google</a> sit in that sweet spot. They both define how to package CSV files with a metadata description (in JSON or in XML) that describes the content of the CSV files, and how they relate to each other.</p>\n<p>Formalising and standardising the sweet spot is the role of the <a href=\"http://www.w3.org/2013/csvw/wiki/Main_Page\">CSV on the Web Working Group</a> which I am co-chairing with <a href=\"http://danbri.org/\">Dan Brickley</a>. If you work on tools that either consume or produce tabular data, you should at least follow the work of the group by <a href=\"http://lists.w3.org/#public-csv-wg\">subscribing to the mailing list</a>. If you work for a company that is a W3C member, please consider <a href=\"https://www.w3.org/2004/01/pp-impl/68238/join\">joining the group</a>. If you support this standardisation effort and aren't a W3C member, please consider <a href=\"http://www.w3.org/Consortium/join\">joining the W3C</a> so you can join the group, or <a href=\"mailto:group-csv-chairs@w3.org\">email us</a> to be considered as an independent expert.</p>\n<p>If we're successful, I expect to see implementation of parsers/importers for <a href=\"http://www.r-project.org/\">R</a>, NoSQL databases such as <a href=\"http://www.mongodb.org/\">MongoDB</a>, SQL databases, and triplestores. I expect to see exporters/converters from those same databases and from spreadsheet software. I expect to see validators, visualisers and other generic tooling. In fact, we're already working on a <a href=\"http://csvlint.io/\">CSV validator</a> at ODI.</p>\n<p>And I'm not the only one who thinks CSV's time has come. <a href=\"http://maxogden.com/\">Max Ogden</a> is organising <a href=\"http://csvconf.com/\">CSVConf</a> in July during <a href=\"http://2014.okfestival.org/\">OKFestival</a> in Berlin. Mark the dates in your diary. (You should also check out Max's work on synchronising data within <a href=\"https://github.com/maxogden/dat\">dat</a>.)</p>","media_enquiries_name":"","media_enquiries_email":"","media_enquiries_telephone":"","organizations":[],"author":{"name":"Jeni Tennison","slug":"jeni-tennison","state":"published","web_url":"http://theodi.org/team/jeni-tennison","tag_ids":["team","team","strategy-programme","staff","ceo"]}},"related_external_links":[],"related":[],"organizations":[],"author":{"name":"Jeni Tennison","slug":"jeni-tennison","state":"published","web_url":"http://theodi.org/team/jeni-tennison","tag_ids":["team","team","strategy-programme","staff","ceo"]}}