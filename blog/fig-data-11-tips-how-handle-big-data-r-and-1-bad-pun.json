{"id":"https://contentapi.theodi.org/fig-data-11-tips-how-handle-big-data-r-and-1-bad-pun.json","web_url":"http://theodi.org/blog/fig-data-11-tips-how-handle-big-data-r-and-1-bad-pun","slug":"fig-data-11-tips-how-handle-big-data-r-and-1-bad-pun","title":"Fig Data: 11 Tips on How to Handle Big Data in R (and 1 Bad Pun)","format":"article","updated_at":"2015-09-11T10:03:05+00:00","created_at":"2013-07-18T08:42:56+00:00","tag_ids":["blog","technical","r","how-to","show-me-the-money","tech","tech-team"],"tags":[{"id":"https://contentapi.theodi.org/tags/articles/blog.json","web_url":null,"title":"Blog Post","details":{"description":"Blog Post","type":"article"},"content_with_tag":{"id":"https://contentapi.theodi.org/with_tag.json?article=blog","web_url":"http://theodi.org/tags/blog","slug":"blog"}},{"id":"https://contentapi.theodi.org/tags/keywords/technical.json","web_url":null,"title":"technical","details":{"type":"keyword"},"content_with_tag":{"id":"https://contentapi.theodi.org/with_tag.json?keyword=technical","web_url":"http://theodi.org/tags/technical","slug":"technical"}},{"id":"https://contentapi.theodi.org/tags/keywords/r.json","web_url":null,"title":"r","details":{"type":"keyword"},"content_with_tag":{"id":"https://contentapi.theodi.org/with_tag.json?keyword=r","web_url":"http://theodi.org/tags/r","slug":"r"}},{"id":"https://contentapi.theodi.org/tags/keywords/how-to.json","web_url":null,"title":"how to","details":{"type":"keyword"},"content_with_tag":{"id":"https://contentapi.theodi.org/with_tag.json?keyword=how-to","web_url":"http://theodi.org/tags/how-to","slug":"how-to"}},{"id":"https://contentapi.theodi.org/tags/keywords/show-me-the-money.json","web_url":null,"title":"show me the money","details":{"type":"keyword"},"content_with_tag":{"id":"https://contentapi.theodi.org/with_tag.json?keyword=show-me-the-money","web_url":"http://theodi.org/tags/show-me-the-money","slug":"show-me-the-money"}},{"id":"https://contentapi.theodi.org/tags/keywords/tech.json","web_url":null,"title":"tech","details":{"type":"keyword"},"content_with_tag":{"id":"https://contentapi.theodi.org/with_tag.json?keyword=tech","web_url":"http://theodi.org/tags/tech","slug":"tech"}},{"id":"https://contentapi.theodi.org/tags/keywords/tech-team.json","web_url":null,"title":"tech team","details":{"type":"keyword"},"content_with_tag":{"id":"https://contentapi.theodi.org/with_tag.json?keyword=tech-team","web_url":"http://theodi.org/tags/tech-team","slug":"tech-team"}}],"details":{"need_id":"","business_proposition":false,"description":"<p>What follows is a, technical, collection of tips. It assumes you are familiar with base R, how to install packages and how to do basic operations. Two interactive introductions to R are: DataMind and Code School.</p>","excerpt":"In our latest project, [Show me the Money](http://smtm.labs.theodi.org), we used close to 14 million rows to analyse regional activity of peer-to-peer lending in the UK. Conventional tools such as Excel fail (limited to\u0002 1,048,576 rows), which is sometimes taken as the definition of Big Data. Then again, I\u0002 recently\u0002 heard one of the leading experts,\u0002 [Ken Cukier](http://big-data-book.com/meet-the-authors),\u0002 say: \"there is no definition of big data\".\u0002 \r","language":"en","need_extended_font":false,"alternative_title":"11 Tips on How to Handle Big Data in R ","url":"","content":"<p>In our latest project, <a href=\"http://smtm.labs.theodi.org\"><em>Show me the Money</em></a>, we used close to 14 million rows to analyse regional activity of peer-to-peer lending in the UK. Conventional tools such as Excel fail (limited to\u0002 1,048,576 rows), which is sometimes taken as the definition of <em>Big Data</em>. Then again, I\u0002 recently\u0002 heard one of the leading experts,\u0002 <a href=\"http://big-data-book.com/meet-the-authors\">Ken Cukier</a>,\u0002 say: \"there is no definition of big data\".\u0002 </p>\n<p><img src=\"http://bd7a65e2cb448908f934-86a50c88e47af9e1fb58ce0672b5a500.r32.cf3.rackcdn.com/uploads/assets/c8/78/55c878641f986a082f000001/R1.jpg\" alt=\"\" class=\"img\" id=\"55c87863f362be19bc000013\">\n<i><small>Image: Flickr (CC BY 2.0)-<a href=\"https://www.flickr.com/photos/nanpalmero/14187836848/\">NaN Palmero</a></small></i></p>\n<p><strong>What follows is a, technical,\u0002 collection of tips. It assumes you are familiar with base R, how to install packages and how to do basic operations. Two interactive introductions to R are: <a href=\"http://www.datamind.org/\">DataMind</a>\u0002 and <a href=\"http://www.codeschool.com/courses/try-r\">Code School</a>.</strong></p>\n<p>In this particular case \u0002I managed to load the complete data\u0002 into RAM for a standard analysis in \u0002<a href=\"http://www.r-project.org/\">R</a>, i.e. no \u0002Hadoop or similar. \u0002Here are 11 tips when you deal with\u0002 <strong>f</strong>–ing\u0002 <strong>irritating</strong>, \u0002<strong>granular data</strong>.\u0002 This blog post is about <em>Fig Data</em>: data that may\u0002 not be \u0002\"big\" but the problems of size are <em>thinly veiled</em>. I won't cover parallel techniques in R, but \u0002you can find a starting point with \u0002<a href=\"http://r-pbd.org/\">programming with big data in R</a>\u0002 and a\u0002 <a href=\"http://www.xmind.net/m/LKF2/\">mind map</a>.\u0002 Just because you can load your data \u0002into RAM does not guarantee you a smooth workflow. Computers are powerful, but it is easy to reach their limits.\u0002 The <strong>scale factor</strong>, that is a rough estimates of the\u0002 potential time you could save, is sometimes\u0002 <em>up to 1,000\u0002</em> or even beyond. A factor of 60 means your code takes 1 minute to run \u0002instead of 1 hour.</p>\n<h2 id=\"the11tips\">The 11 tips</h2>\n<ol>\n<li><p><strong>Think in vectors.</strong> This means that for-loops (\"do this for \u0002x times\") \u0002are generally a bad idea in R. The <a href=\"http://www.burns-stat.com/pages/Tutor/R_inferno.pdf\">R Inferno</a> has a chapter on why and how to \"vectorise\". \u0002Especially if you're a beginner or come from another programming language for-loops might be tempting. Resist and try to speak \u0002R. The <a href=\"http://nsaunders.wordpress.com/2010/08/20/a-brief-introduction-to-apply-in-r/\">apply</a> family may be a good starting point, but of course do \u0002not avoid loops simply for the sake of avoiding loops.</p></li>\n<li><p><strong>Use the fantastic <a href=\"http://datatable.r-forge.r-project.org/\">data.table</a> package.</strong>\u0002 Its advantage lies in speed and efficiency. \u0002Developed by \u0002<a href=\"http://stackoverflow.com/users/403310/matthew-dowle\">Matthew Dowle</a> \u0002it introduces a way of handling data, similar to the data.frame class. In fact, it includes data.frame, but some of the syntax is different. Luckily, the <a href=\"http://cran.r-project.org/web/packages/data.table/vignettes/datatable-intro.pdf\">documentation</a> (and the <a href=\"http://datatable.r-forge.r-project.org/datatable-faq.pdf\">FAQ</a>) are\u0002 excellent.</p></li>\n<li><p><strong>Read csv-files with the <a href=\"http://www.inside-r.org/packages/cran/data.table/docs/fread\">fread</a> function</strong> instead of read.csv (read.table). It is faster in reading\u0002a file in table format and\u0002gives you feedback on progress. However, it comes with a big warning sign\u0002 <em>\"not for production use yet\"</em>. One trick it uses is to \u0002read the first, middle, and last 5 rows to determine column types.\u0002 Side note: ALL functions that take longer than 5 seconds should have progress bars. Writing your own function? –&gt; <a href=\"http://stat.ethz.ch/R-manual/R-devel/library/utils/html/txtProgressBar.html\">txtProgressBar</a>.</p></li>\n<li><p><strong>Parse POSIX dates with the <em>very</em> fast\u0002package\u0002 <a href=\"http://rforge.net/fasttime/\">fasttime</a>.\u0002</strong> Let me say that again:\u0002very fast. (Though the dates have to be in a standard format.)</p></li>\n<li><p><strong>Avoid copying data.frames</strong> \u0002and \u0002<strong>remove,</strong> <code>rm(yourdatacopy)</code>, some in your workflow. You'll figure this out anyway when you run out of space.</p></li>\n<li><p><strong>Merge data.frames with the superior <a href=\"http://stackoverflow.com/questions/15673550/why-is-rbindlist-better-than-rbind\">rbindlist</a></strong> \u0002– \u0002data.table we meet again. As the community knows: \"<em>rbindlist</em> is an optimized version of <code>do.call(rbind, list(...))</code>, which is known for being slow when using rbind.data.frame.\"</p></li>\n<li><p><strong>Regular expressions can be slow</strong>, too. On one occassion I found a simpler way and used the <a href=\"http://journal.r-project.org/archive/2010-2/RJournal_2010-2_Wickham.pdf\">stringr</a> package instead; it was a lot faster. </p></li>\n<li><p>No R tips collection would be complete with a hat tip to Hadley Wickham. Besides stringr, I point you to <strong><a href=\"https://github.com/hadley/bigvis\">bigvis</a>, a package for visualising big data sets</strong>.</p></li>\n<li><p><strong>Use a <em>random sample</em> for your exploratory analysis or to test code</strong>. Here is a code snippet that will give you a convenient <a href=\"https://gist.github.com/statshero/6122484\">function</a>:\u0002 <code>row.sample(yourdata, 1000)\u0002</code> will reduce your massive file to a random sample of 1,000 observations.</p></li>\n<li><p>Related to the previous point is <strong>reading only a subset of the data you want to analyse</strong>. <code>read.csv()</code> for example has a <code>nrows</code> option, which only reads the first x number of lines. This is also a good idea of getting your header names. The preferred option, a random sample, is more difficult and probably needs a 'workaround' as described <a href=\"http://stackoverflow.com/questions/15532810/reading-40-gb-csv-file-into-r-using-bigmemory\">here</a>.</p></li>\n<li><p><strong>Export your data set directly as gzip.</strong> Writing a compressed csv file is not entirly trivial, but <a href=\"http://blog.revolutionanalytics.com/2009/12/r-tip-save-time-and-space-by-compressing-data-files.html\">stackoverflow</a> has the answer. <a href=\"http://blog.revolutionanalytics.com/2009/12/r-tip-save-time-and-space-by-compressing-data-files.html\">Revolution Analytics</a> also has some benchmark times for compressions in R.</p></li>\n</ol>\n<p><strong><a href=\"http://theodi.org/team/ulrich-atz\">Ulrich Atz</a> is a Startup Programme Manager at the ODI. Follow <a href=\"https://twitter.com/statshero\">@Ulrich Atz</a> on Twitter.</strong></p>\n<p><strong>If you have ideas or experience in open data that you’d like to share, <a href=\"mailto:production@theodi.org\">pitch us a blog</a> or tweet us at <a href=\"https://twitter.com/odihq\">@ODIHQ</a>.</strong></p>\n<p><img src=\"http://bd7a65e2cb448908f934-86a50c88e47af9e1fb58ce0672b5a500.r32.cf3.rackcdn.com/uploads/assets/c8/79/55c879a9f362be1b10000007/r2.jpg\" alt=\"\" class=\"img\" id=\"55c879a91f986a07de000002\"></p>\n<p><i><small>Image: Flickr (CC BY 2.0)-<a href=\"https://www.flickr.com/photos/sidelong/8021460657/\">David Bleasdale</a></small></i></p>\n<p>\u0002</p>","media_enquiries_name":"","media_enquiries_email":"","media_enquiries_telephone":"","organizations":[],"author":{}},"related_external_links":[],"related":[{"id":"https://contentapi.theodi.org/courses.json","web_url":"http://theodi.org/courses","slug":"courses","title":"Courses","format":"article","updated_at":"2017-04-27T12:05:53+00:00","created_at":"2014-12-11T10:53:24+00:00","tag_ids":["page","courses","homepage"]},{"id":"https://contentapi.theodi.org/what-is-open-data.json","web_url":"http://theodi.org/what-is-open-data","slug":"what-is-open-data","title":"What is open data?","format":"article","updated_at":"2016-01-05T15:22:05+00:00","created_at":"2014-10-30T15:43:18+00:00","tag_ids":["page","open-data","explained","what-is","introduction","closed-data","shared-data"]},{"id":"https://contentapi.theodi.org/who-owns-our-data-infrastructure.json","web_url":"http://theodi.org/who-owns-our-data-infrastructure","slug":"who-owns-our-data-infrastructure","title":"Who owns our data infrastructure?","format":"article","updated_at":"2015-11-18T15:32:13+00:00","created_at":"2015-05-27T11:02:51+00:00","tag_ids":["page","open-data","infrastructure","strategy","visions","international"]}],"organizations":[],"author":{}}